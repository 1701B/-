事务
概念;保证事务的一致性
 分为:
一致性:
	一致性是指事务必须使数据库从一个一致性状态变换到另一个一致性状态，也就是说一个事务执行之前和执行之后都必须处于一致性状态。

原子性:
原子性是指事务包含的所有操作要么全部成功，要么全部失败回滚，因此事务的操作如果成功就必须要完全应用到数据库，如果操作失败则不能对数据库有任何影响
隔离性:
	隔离性是当多个用户并发访问数据库时，比如操作同一张表时，数据库为每一个用户开启的事务，不能被其他事务的操作所干扰，多个并发事务之间要相互隔离
持久性:
	持久性是指一个事务一旦被提交了，那么对数据库中的数据的改变就是永久性 的，即便是在数据库系统遇到故障的情况下也不会丢失提交事务的操作。
　　例如我们在使用JDBC操作数据库时，在提交事务方法后，提示用户事务操作完成，当我们程序执行完成直到看到提示后，就可以认定事务以及正确提交，即使这时候数据库出现了问题，也必须要将我们的事务完全执行完成，否则就会造成我们看到提示事务处理完毕，但是数据库因为故障而没有执行事务的重大错误

Spring的事务分类

1.编程事务(手动挡事务)
Try/cat进行捕获异常.如果异常进行回滚
   事务的底层就是通过aop的前置,后置通知,前置开启事务,后置提交事务,捕获回滚
2.声明式事务(自动挡事务)”
   声明式事务(xml,注解方式)  在方法执行完成后提交事务
声明式事务注意事项:
  事务的程序运行时如果没有发生错误.自动提交事务,如果程序发生异常,则会自动回滚,如果使用了tyr/catch捕获异常,一定要在catch里面手动回滚
注解方式”:  在xml里配置事务开启注解
@Transactional
事务的7种传播行为”
常用的:1.REQUIRES :支持当前事务,如果当前没有事务,就新建一个事务
2.REQUIRES_new:r如果当前存在事务,,就帮当前的事务挂起,互不影响
3.PROPAGATION_SUPPORTS--支持当前事务，如果当前没有事务，就以非事务方式执行。
4.PROPAGATION_MANDATORY--支持当前事务，如果当前没有事务，就抛出异常。?
5.PROPAGATION_NOT_SUPPORTED--以非事务方式执行操作，如果当前存在事务，就把当前事务挂起。?
6.PROPAGATION_NEVER--以非事务方式执行，如果当前存在事务，则抛出异常。